# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-01-21 20:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('home', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankCard',
            fields=[
                ('card_id', models.AutoField(primary_key=True, serialize=False, verbose_name='银行卡编号')),
                ('card_num', models.CharField(max_length=30, verbose_name='银行卡号')),
                ('card_type', models.IntegerField(choices=[(1, '农行储蓄卡'), (2, '工行信用卡')], verbose_name='类型')),
                ('create_data', models.DateTimeField(auto_now_add=True)),
                ('is_delete', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '银行卡',
                'verbose_name_plural': '银行卡',
                'db_table': 'bank_card',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('collection_id', models.AutoField(primary_key=True, serialize=False, verbose_name='收藏编号')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='收藏时间')),
                ('is_delete', models.BooleanField(default=False)),
                ('goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Goods', verbose_name='关联商品编号')),
            ],
            options={
                'verbose_name': '收藏',
                'verbose_name_plural': '收藏',
                'db_table': 'collection',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.AutoField(primary_key=True, serialize=False, verbose_name='优惠券编号')),
                ('value', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='金额')),
                ('begin_date', models.DateTimeField(verbose_name='开始时间')),
                ('invalid_date', models.DateTimeField(verbose_name='失效时间')),
                ('status', models.IntegerField(choices=[(1, '未使用'), (2, '已使用')], verbose_name='状态')),
                ('is_delete', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '优惠券',
                'verbose_name_plural': '优惠券',
                'db_table': 'coupon',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户编号')),
                ('email', models.CharField(max_length=50, verbose_name='邮箱')),
                ('nickname', models.CharField(blank=True, max_length=100, verbose_name='昵称')),
                ('login_password', models.CharField(max_length=50, verbose_name='密码')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='手机号')),
                ('is_active', models.BooleanField(default=False, verbose_name='激活状态')),
                ('is_delete', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'member',
            },
        ),
        migrations.CreateModel(
            name='MemberInfo',
            fields=[
                ('update_date', models.DateTimeField(auto_created=True)),
                ('info_id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户信息编号')),
                ('real_name', models.CharField(blank=True, max_length=100, verbose_name='真是姓名')),
                ('sex', models.IntegerField(blank=True, choices=[(1, '男'), (2, '女')], default=0, verbose_name='性别')),
                ('birthday', models.DateTimeField(auto_now_add=True, verbose_name='生日')),
                ('member_img', models.ImageField(blank=True, upload_to='upload/member/', verbose_name='用户头像')),
                ('pay_password', models.CharField(max_length=50)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, verbose_name='余额')),
                ('points', models.IntegerField(blank=True, default=0, verbose_name='积分')),
                ('is_vip', models.IntegerField(choices=[(0, '普通会员'), (1, '黄金会员'), (2, '钻石会员'), (3, '铂金会员')], default=0, verbose_name='会员等级')),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Member', verbose_name='关联用户编号')),
            ],
            options={
                'verbose_name': '用户资料',
                'verbose_name_plural': '用户资料',
                'db_table': 'member_info',
            },
        ),
        migrations.CreateModel(
            name='MemberLoc',
            fields=[
                ('loc_id', models.AutoField(primary_key=True, serialize=False, verbose_name='地址编号')),
                ('province', models.CharField(max_length=200, verbose_name='省份')),
                ('city', models.CharField(max_length=200, verbose_name='城市')),
                ('detail_loc', models.TextField(verbose_name='地址详情')),
                ('is_default', models.BooleanField(choices=[(True, '默认地址'), (False, '非默认地址')], default=True, verbose_name='默认地址')),
                ('is_delete', models.BooleanField(default=False)),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Member', verbose_name='关联用户编号')),
            ],
            options={
                'verbose_name': '用户地址',
                'verbose_name_plural': '用户地址',
                'db_table': 'member_loc',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False, verbose_name='消息编号')),
                ('sender_id', models.IntegerField(verbose_name='发件人编号')),
                ('receiver_id', models.IntegerField(verbose_name='收件人编号')),
                ('message_title', models.CharField(max_length=100, verbose_name='标题')),
                ('message_img', models.ImageField(upload_to='media/msg/', verbose_name='图片')),
                ('message_content', models.TextField(blank=True, verbose_name='内容')),
                ('status', models.BooleanField(choices=[(True, '已读'), (False, '未读')], default=False)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('is_delete', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '消息',
                'verbose_name_plural': '消息',
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='订单编号')),
                ('count', models.IntegerField(verbose_name='数量')),
                ('status', models.IntegerField(choices=[(0, '订单未付款'), (1, '订单已完成'), (2, '订单待收货')], verbose_name='订单状态')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Goods', verbose_name='关联商品编号')),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Member', verbose_name='关联用户编号')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False, verbose_name='评论编号')),
                ('conten', models.TextField(verbose_name='用户详情')),
                ('image', models.ImageField(upload_to='media/review/', verbose_name='图片')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Goods', verbose_name='关联商品编号')),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Member', verbose_name='关联用户编号')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='ShopCar',
            fields=[
                ('car_id', models.AutoField(primary_key=True, serialize=False, verbose_name='购物车编号')),
                ('count', models.IntegerField(verbose_name='数量')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('goods_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Goods', verbose_name='关联商品编号')),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Member', verbose_name='关联用户编号')),
            ],
            options={
                'verbose_name': '购物车',
                'verbose_name_plural': '购物车',
                'db_table': 'shop_car',
            },
        ),
        migrations.AddField(
            model_name='coupon',
            name='member_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Member', verbose_name='关联用户编号'),
        ),
        migrations.AddField(
            model_name='collection',
            name='member_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Member', verbose_name='关联用户编号'),
        ),
        migrations.AddField(
            model_name='bankcard',
            name='member_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Member', verbose_name='关联用户编号'),
        ),
    ]
